// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(
    userId,
    name,
    email,
  password,
  role,
  profilephoto,
  createdAt
) VALUES ($1,$2,$3,$4,$5,$6,now())RETURNING userid, name, email, password, role, profilephoto, createdat
`

type CreateUserParams struct {
	Userid       uuid.UUID    `json:"userid"`
	Name         string       `json:"name"`
	Email        string       `json:"email"`
	Password     string       `json:"password"`
	Role         NullUserRole `json:"role"`
	Profilephoto string       `json:"profilephoto"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Userid,
		arg.Name,
		arg.Email,
		arg.Password,
		arg.Role,
		arg.Profilephoto,
	)
	var i User
	err := row.Scan(
		&i.Userid,
		&i.Name,
		&i.Email,
		&i.Password,
		&i.Role,
		&i.Profilephoto,
		&i.Createdat,
	)
	return i, err
}
